//‡∏Ñ‡∏≥‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á Symbol.iterator ‡∏Ñ‡∏∑‡∏≠ ‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡πà‡∏≤ object ‡∏ô‡∏±‡πâ‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏•‡∏π‡∏õ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ for...of loop ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô array, string, map, set, arguments object ‡πÅ‡∏•‡∏∞ yeild* ‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Symbol.iterator ‡πÇ‡∏î‡∏¢‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡∏ó‡∏≠‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏Ç‡∏≠‡∏á object ‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö generator function ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô object ‡∏ô‡∏±‡πâ‡∏ô‡πÜ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏£‡∏ß‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢

// ‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á testingTeam ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á engineeringTeam ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ generator function ‡∏ä‡∏∑‡πà‡∏≠ TeamIterator ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ return ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô engineeringTeam ‡πÅ‡∏•‡∏∞ testingTeam
const testingTeam = {
  lead: 'Amanda', // lead ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡∏°
  tester: 'Bill', // tester ‡∏ú‡∏π‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  [Symbol.iterator]: function* () {
    // ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤ object ‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏•‡∏π‡∏õ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ for...of loop ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    yield this.lead;
    yield this.tester;
  }
};

const engineeringTeam = {
  testingTeam, // testingTeam ‡∏ó‡∏µ‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  size: 3, // size ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏ó‡∏µ‡∏°
  department: 'Engineering', // department ‡πÅ‡∏ú‡∏ô‡∏Å
  lead: 'Jack', // lead ‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡∏°
  manager: 'Alex', // manager ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
  engineering: 'Dave' // engineering ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£
};

// ‡∏™‡∏£‡πâ‡∏≤‡∏á generator function ‡∏ä‡∏∑‡πà‡∏≠ TeamIterator ‡πÇ‡∏î‡∏¢‡∏£‡∏±‡∏ö parameter ‡πÄ‡∏õ‡πá‡∏ô team
function* TeamIterator(team) {
  yield team.lead; // ‡πÉ‡∏´‡πâ yield ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.lead
  yield team.manager; // ‡πÉ‡∏´‡πâ yield ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.manager
  yield team.engineering; // ‡πÉ‡∏´‡πâ yield ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.engineering
  // const testingTeamGenerators = TestingTeamIterator(team.testingTeam);
  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏¥‡πà‡∏° [Symbol.iterator]:function*() ‡πÉ‡∏ô testingTeam ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á generator function ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ testingTeamIterator ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ parameter ‡πÄ‡∏õ‡πá‡∏ô team.testingTeam ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ Symbol.iterator ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á generator function ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å yield* testingTeamGenerators ‡πÄ‡∏õ‡πá‡∏ô yield* team.testingTeam ‡πÅ‡∏ó‡∏ô
  yield* team.testingTeam; // ‡πÉ‡∏´‡πâ yield* ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.testingTeam
}
// Line 21 - 22 ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° * ‡∏´‡∏•‡∏±‡∏á yield ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ generator function ‡πÑ‡∏î‡πâ ‡πÇ‡∏î‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô [ 'Jack', 'Alex', 'Dave' ] ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô engineeringTeam ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° testingTeam ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ generator function ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ TestingTeamIterator ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ parameter ‡πÄ‡∏õ‡πá‡∏ô team.testingTeam ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô [ 'Amanda', 'Bill' ] ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô [ 'Jack', 'Alex', 'Dave', 'Amanda', 'Bill' ]

// ‡∏™‡∏£‡∏∏‡∏õ ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2nd generator function ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å TeamIterator ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ yield* ‡πÅ‡∏ó‡∏ô yield ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô array ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á testingTeam ‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô [ 'Jack', 'Alex', 'Dave', 'Amanda', 'Bill' ]

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö 2nd generator function
function* TestingTeamIterator(team) {
  yield team.lead; // ‡πÉ‡∏´‡πâ yield ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.lead
  yield team.tester; // ‡πÉ‡∏´‡πâ yield ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô team.tester
}

const names = [];
for (let name of TeamIterator(engineeringTeam)) {
  names.push(name);
}
console.log(names); // [ 'Jack', 'Alex', 'Dave' ] ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡∏£‡∏ß‡∏° testingTeam ‡∏à‡∏∞‡πÑ‡∏î‡πâ [ 'Jack', 'Alex', 'Dave', 'Amanda', 'Bill' ]

/*
///////////// Engineering Team /////////////
===========================================
||Lead||Manager||Engineering||Testing Team||
===========================================
                                   ‚¨áÔ∏è
                    Testing Teamüëáüèª ‚¨áÔ∏è
                            ===============
                            ||Lead||Tester||
===========================================

 */
